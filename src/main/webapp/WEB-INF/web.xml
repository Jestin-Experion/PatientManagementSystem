<?xml version="1.0" encoding="UTF-8"?>
<!-- Use this definition if using a Java EE 6 container This also stops Eclipse 
	from complaining that 3.0 is not a valid version <web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" 
	http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"> -->

<!-- Enable this header for TOMCAT. Comment this for Weblogic 9.2 -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<!-- Enable this header for WebLogic 9.2, since 9.2 supports web app version 
		2.4. Disable this for TOMCAT -->
	<!--<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
		http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"> -->


	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<display-name>Patient Management System</display-name>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/com/experion/pms/configuration/spring/applicationContext.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/app/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<!-- <servlet> <servlet-name>jersey-serlvet</servlet-name> <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class> 
		<init-param> <param-name>com.sun.jersey.config.property.packages</param-name> 
		<param-value>com.experion.pms.mvc.controller</param-value> </init-param> 
		<init-param> <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name> 
		<param-value>true</param-value> </init-param> <load-on-startup>1</load-on-startup> 
		</servlet> -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<filter> <filter-name>SecurityFilter</filter-name> 
		<filter-class>com.experion.pms.filters.SecurityFilter</filter-class> 
		</filter> 
		<filter-mapping> <filter-name>SecurityFilter</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>

	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>

	<session-config>
		<session-timeout>1</session-timeout>   <!-- 10 minutes -->
	</session-config>
	
	<listener>
		<listener-class>com.experion.pms.filters.SessionListener</listener-class>
	</listener>

</web-app>